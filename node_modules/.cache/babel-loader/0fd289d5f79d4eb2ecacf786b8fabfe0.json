{"ast":null,"code":"var _jsxFileName = \"/home/jose/\\xC1rea de Trabalho/GoStackBootcamp-DesafioReactjs/web/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport api from \"./services/api\";\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    api.get(\"repositories\").then(response => {\n      setRepositories(response.data);\n    });\n  }, []);\n\n  async function handleAddRepository() {\n    // TODO\n    const response = await api.post(\"repositories\", {\n      title: \"Projeto 1\",\n      url: \"https://github.com/jose1gcm/projeto1\",\n      techs: [\"Node.js\", \"ReactJS\"]\n    });\n    const repository = response.data;\n    setRepositories([...repositories, repository]);\n  }\n\n  async function handleRemoveRepository(id) {\n    // TODO\n    await api.delete(`repositories${id}`);\n    const repositoryFiltered = repositories.filter(repository => repository.id !== id);\n    setRepositories(repositoryFiltered);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"li\", {\n    key: repository.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, repository.title, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRemoveRepository(repository.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Remover\")))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/jose/Área de Trabalho/GoStackBootcamp-DesafioReactjs/web/src/App.js"],"names":["React","useEffect","useState","api","App","repositories","setRepositories","get","then","response","data","handleAddRepository","post","title","url","techs","repository","handleRemoveRepository","id","delete","repositoryFiltered","filter","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,cAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCJ,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBC,IAAxB,CAA6BC,QAAQ,IAAI;AACvCH,MAAAA,eAAe,CAACG,QAAQ,CAACC,IAAV,CAAf;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,iBAAeC,mBAAf,GAAqC;AACnC;AACA,UAAMF,QAAQ,GAAG,MAAMN,GAAG,CAACS,IAAJ,CAAS,cAAT,EAAyB;AAC9CC,MAAAA,KAAK,EAAE,WADuC;AAE9CC,MAAAA,GAAG,EAAE,sCAFyC;AAG9CC,MAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ;AAHuC,KAAzB,CAAvB;AAMA,UAAMC,UAAU,GAAGP,QAAQ,CAACC,IAA5B;AACAJ,IAAAA,eAAe,CAAC,CAAE,GAAGD,YAAL,EAAmBW,UAAnB,CAAD,CAAf;AACD;;AAED,iBAAeC,sBAAf,CAAsCC,EAAtC,EAA0C;AACxC;AACA,UAAMf,GAAG,CAACgB,MAAJ,CAAY,eAAcD,EAAG,EAA7B,CAAN;AACA,UAAME,kBAAkB,GAAGf,YAAY,CAACgB,MAAb,CAAqBL,UAAU,IAAIA,UAAU,CAACE,EAAX,KAAkBA,EAArD,CAA3B;AACAZ,IAAAA,eAAe,CAACc,kBAAD,CAAf;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,YAAY,CAACiB,GAAb,CAAiBN,UAAU,iBAC1B;AAAI,IAAA,GAAG,EAAEA,UAAU,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,UAAU,CAACH,KADf,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAMI,sBAAsB,CAACD,UAAU,CAACE,EAAZ,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADD,CADH,CADF,eAaE;AAAQ,IAAA,OAAO,EAAEP,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF,CADF;AAiBD;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"./services/api\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [ repositories, setRepositories ] = useState([]);\n\n  useEffect(() => {\n    api.get(\"repositories\").then(response => {\n      setRepositories(response.data);\n    });\n  }, [])\n\n  async function handleAddRepository() {\n    // TODO\n    const response = await api.post(\"repositories\", {\n      title: \"Projeto 1\",\n      url: \"https://github.com/jose1gcm/projeto1\",\n      techs: [\"Node.js\", \"ReactJS\"]\n    })\n\n    const repository = response.data;\n    setRepositories([ ...repositories, repository]);\n  }\n\n  async function handleRemoveRepository(id) {\n    // TODO\n    await api.delete(`repositories${id}`);\n    const repositoryFiltered = repositories.filter( repository => repository.id !== id);\n    setRepositories(repositoryFiltered);\n  }\n\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n        {repositories.map(repository => (\n          <li key={repository.id}>\n            { repository.title }\n          \n            <button onClick={() => handleRemoveRepository(repository.id)}>\n              Remover\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}